# Generated by Django 4.0.1 on 2022-11-27 23:02

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockchainState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(blank=True, null=True, unique=True)),
                ('value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('name', models.TextField(blank=True, null=True)),
                ('symbol', models.TextField(blank=True, editable=False, null=True)),
                ('total_supply', models.PositiveIntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[('1155', 'ERC-1155'), ('721', 'ERC-721')], default='721', max_length=4)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('last_supply_check', models.DateTimeField(blank=True, null=True)),
                ('is_bridged', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Erc721BuyOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('expiration', models.DateTimeField()),
                ('price', models.BigIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('message_hash', models.TextField(blank=True, null=True)),
                ('signature', models.TextField(unique=True)),
                ('order_json', models.TextField(blank=True, null=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('fulfilled', models.BooleanField(default=False)),
                ('txn_id', models.TextField(blank=True, null=True)),
                ('time_sold', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('contract_version', models.SmallIntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Buy order',
            },
        ),
        migrations.CreateModel(
            name='Erc721Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('symbol', models.TextField(blank=True, editable=False, null=True)),
                ('type', models.CharField(choices=[('1155', 'ERC-1155'), ('721', 'ERC-721')], default='721', max_length=4)),
                ('royalty_per_mille', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('payout_address', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, max_length=10000, null=True, upload_to='quixotic-collection-profile/')),
                ('profile_image_url', models.URLField(blank=True, max_length=750, null=True)),
                ('profile_image_hash', models.CharField(blank=True, max_length=750, null=True)),
                ('cover_image', models.ImageField(blank=True, max_length=512, null=True, upload_to='quixotic-collection-cover/')),
                ('seo_image', models.ImageField(blank=True, max_length=10000, null=True, upload_to='quixotic-collection-seo-image/')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('twitter_link', models.URLField(blank=True, null=True)),
                ('discord_link', models.URLField(blank=True, null=True)),
                ('site_link', models.URLField(blank=True, null=True)),
                ('display_theme', models.PositiveSmallIntegerField(default=1)),
                ('category', models.CharField(blank=True, choices=[('AR', 'Art'), ('CO', 'Collectibles'), ('MU', 'Music'), ('PH', 'Photography'), ('SP', 'Sports'), ('UT', 'Utility'), ('VW', 'Virtual Worlds')], max_length=2, null=True)),
                ('ranking_enabled', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('is_spam', models.BooleanField(default=False)),
                ('non_transferable', models.BooleanField(default=False)),
                ('delisted', models.BooleanField(default=False)),
                ('default_sort', models.CharField(blank=True, choices=[('PA', 'price:asc'), ('PD', 'price:desc'), ('EA', 'expiration_timestamp:asc'), ('ED', 'expiration_timestamp:desc'), ('LA', 'listed_timestamp:asc'), ('LD', 'listed_timestamp:desc'), ('HO', 'highest_offer:desc')], max_length=2, null=True)),
                ('animation_url_type', models.CharField(blank=True, choices=[('I', 'Image'), ('V', 'Video'), ('A', 'Audio'), ('H', 'HTML'), ('M', '3D Model')], max_length=1, null=True)),
                ('floor', models.PositiveBigIntegerField(blank=True, null=True)),
                ('volume', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_24h', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_7d', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_30d', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_prev_24h', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_prev_7d', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('volume_prev_30d', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('sales', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('sales_24h', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('sales_7d', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('sales_30d', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('supply', models.PositiveBigIntegerField(blank=True, default=0, null=True)),
                ('listed', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('owners', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('address', models.TextField()),
                ('l1_address', models.TextField(blank=True, null=True)),
                ('total_supply', models.PositiveIntegerField(blank=True, null=True)),
                ('last_supply_pull', models.DateTimeField(blank=True, editable=False, null=True)),
                ('is_eligible_for_boost', models.BooleanField(default=False)),
                ('is_boost_active', models.BooleanField(default=False)),
                ('disable_attribute_lookup', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Collection',
            },
        ),
        migrations.CreateModel(
            name='Erc721DutchAuction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('start_price', models.BigIntegerField()),
                ('end_price', models.BigIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at_block_number', models.PositiveIntegerField(blank=True, null=True)),
                ('message_hash', models.TextField(blank=True, null=True)),
                ('signature', models.TextField(unique=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('fulfilled', models.BooleanField(default=False)),
                ('txn_id', models.TextField(blank=True, null=True)),
                ('time_sold', models.DateTimeField(blank=True, null=True)),
                ('price', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('contract_version', models.SmallIntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Dutch auction',
            },
        ),
        migrations.CreateModel(
            name='Erc721SellOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('expiration', models.DateTimeField()),
                ('price', models.BigIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at_block_number', models.PositiveIntegerField(blank=True, null=True)),
                ('message_hash', models.TextField(blank=True, null=True)),
                ('signature', models.TextField(unique=True)),
                ('order_json', models.TextField(blank=True, null=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('fulfilled', models.BooleanField(default=False)),
                ('txn_id', models.TextField(blank=True, null=True)),
                ('time_sold', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('contract_version', models.SmallIntegerField(default=6)),
            ],
            options={
                'verbose_name': 'Sell order',
            },
        ),
        migrations.CreateModel(
            name='Erc721Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(max_length=128)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('background_color', models.CharField(blank=True, max_length=7, null=True)),
                ('image', models.URLField(blank=True, max_length=10000, null=True)),
                ('image_src', models.CharField(blank=True, max_length=10000, null=True)),
                ('animation_url', models.URLField(blank=True, max_length=10000, null=True)),
                ('animation_url_src', models.CharField(blank=True, max_length=750, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
                ('for_sale', models.BooleanField(default=False)),
                ('price', models.BigIntegerField(blank=True, null=True)),
                ('price_eth', models.BigIntegerField(blank=True, null=True)),
                ('listed_timestamp', models.DateTimeField(blank=True, null=True)),
                ('expiration_timestamp', models.DateTimeField(blank=True, null=True)),
                ('last_sale_price', models.BigIntegerField(blank=True, null=True)),
                ('last_sale_price_eth', models.BigIntegerField(blank=True, null=True)),
                ('highest_offer', models.BigIntegerField(blank=True, null=True)),
                ('highest_offer_eth', models.BigIntegerField(blank=True, null=True)),
                ('approved', models.BooleanField(default=True)),
                ('last_media_pull', models.DateTimeField(blank=True, editable=False, null=True)),
                ('is_airdrop', models.BooleanField(default=False)),
                ('pending_deposit', models.BooleanField(default=False)),
                ('is_l1', models.BooleanField(default=False)),
                ('is_bridged', models.BooleanField(default=False)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721collection')),
            ],
            options={
                'verbose_name': 'Token',
            },
        ),
        migrations.CreateModel(
            name='HostedCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(null=True)),
                ('address', models.TextField(unique=True)),
            ],
            options={
                'verbose_name': 'Deprecated Hosted Collection',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('network_id', models.TextField(unique=True)),
                ('network', models.TextField()),
                ('chain_id', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(unique=True)),
                ('name', models.TextField()),
                ('symbol', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(db_index=True, unique=True)),
                ('username', models.TextField(blank=True, db_index=True, null=True, unique=True)),
                ('profile_image', models.ImageField(blank=True, max_length=512, null=True, upload_to='quixotic-user-profile/')),
                ('cover_image', models.ImageField(blank=True, max_length=512, null=True, upload_to='quixotic-user-cover/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('minimum_offer', models.PositiveBigIntegerField(blank=True, null=True)),
                ('reverse_ens', models.TextField(blank=True, null=True, unique=True)),
                ('notifications_read', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RewardsCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_eligible_for_boost', models.BooleanField(default=False)),
                ('is_boost_active', models.BooleanField(default=False)),
                ('boost_per_mille', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('budget', models.BigIntegerField(blank=True, null=True)),
                ('distributed', models.BigIntegerField(blank=True, null=True)),
                ('collection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.erc721collection')),
            ],
        ),
        migrations.CreateModel(
            name='OffChainActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txn_id', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type_short', models.CharField(blank=True, choices=[('MI', 'Mint'), ('SA', 'Sale'), ('TR', 'Transfer'), ('OF', 'Offer'), ('CO', 'Cancel Offer'), ('LI', 'List'), ('CL', 'Cancel Listing'), ('AD', 'Airdrop'), ('BU', 'Burn'), ('BR', 'Bridge')], max_length=2, null=True)),
                ('buy_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721buyorder')),
                ('dutch_auction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721dutchauction')),
                ('from_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offchain_activity', to='api.profile')),
                ('sell_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721sellorder')),
                ('to_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.profile')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721token')),
            ],
            options={
                'verbose_name_plural': 'Off chain activities',
                'unique_together': {('token', 'quantity', 'from_profile', 'timestamp', 'event_type_short')},
            },
        ),
        migrations.CreateModel(
            name='HostedMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('animation_url', models.FileField(blank=True, default=None, upload_to='quixotic-hosted-collections/animation')),
                ('image', models.ImageField(blank=True, null=True, upload_to='quixotic-hosted-collections/image')),
                ('attributes_str', models.TextField(blank=True, default='{}')),
                ('external_url', models.URLField(blank=True, null=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.hostedcollection')),
            ],
            options={
                'verbose_name': 'Deprecated Hosted Collection Metadata',
            },
        ),
        migrations.CreateModel(
            name='FeaturedCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721collection')),
            ],
        ),
        migrations.CreateModel(
            name='Erc721TokenAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trait_type', models.TextField()),
                ('value', models.TextField()),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721token')),
            ],
            options={
                'verbose_name': 'Token attribute',
            },
        ),
        migrations.AddField(
            model_name='erc721token',
            name='highest_offer_payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='highest_offer', to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721token',
            name='last_sale_payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='last_sale', to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721token',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721token',
            name='payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='price', to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721token',
            name='pending_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bridge_withdrawals', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721token',
            name='smart_contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.contract'),
        ),
        migrations.AddField(
            model_name='erc721sellorder',
            name='buyer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='filled_sell_orders', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721sellorder',
            name='payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721sellorder',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sell_orders', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721sellorder',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token'),
        ),
        migrations.AddField(
            model_name='erc721dutchauction',
            name='buyer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='filled_dutch_auctions', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721dutchauction',
            name='payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721dutchauction',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dutch_auctions', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721dutchauction',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token'),
        ),
        migrations.AddField(
            model_name='erc721collection',
            name='network',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.network'),
        ),
        migrations.AddField(
            model_name='erc721collection',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721collection',
            name='primary_contract',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.contract'),
        ),
        migrations.AddField(
            model_name='erc721buyorder',
            name='buyer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buy_orders', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721buyorder',
            name='payment_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.paymenttoken'),
        ),
        migrations.AddField(
            model_name='erc721buyorder',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='filled_buy_orders', to='api.profile'),
        ),
        migrations.AddField(
            model_name='erc721buyorder',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token'),
        ),
        migrations.CreateModel(
            name='Erc721Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txn_id', models.TextField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type_short', models.CharField(blank=True, choices=[('MI', 'Mint'), ('SA', 'Sale'), ('TR', 'Transfer'), ('OF', 'Offer'), ('CO', 'Cancel Offer'), ('LI', 'List'), ('CL', 'Cancel Listing'), ('AD', 'Airdrop'), ('BU', 'Burn'), ('BR', 'Bridge')], max_length=2, null=True)),
                ('buy_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721buyorder')),
                ('dutch_auction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721dutchauction')),
                ('from_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_address', to='api.profile')),
                ('sell_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721sellorder')),
                ('to_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.profile')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721token')),
            ],
            options={
                'verbose_name': 'On chain activity',
                'verbose_name_plural': 'On chain activities',
            },
        ),
        migrations.CreateModel(
            name='Erc1155TokenOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.profile')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.erc721collection'),
        ),
        migrations.AddField(
            model_name='contract',
            name='network',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.network'),
        ),
        migrations.AddField(
            model_name='contract',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.profile'),
        ),
        migrations.CreateModel(
            name='CollectionOfferThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_offer', models.PositiveBigIntegerField(blank=True, null=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721collection')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='BridgedContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=True)),
                ('from_contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='l2_contract', to='api.contract')),
                ('to_contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='l1_contract', to='api.contract')),
            ],
        ),
        migrations.CreateModel(
            name='TokenLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.erc721token')),
            ],
            options={
                'unique_together': {('profile', 'token')},
            },
        ),
        migrations.CreateModel(
            name='ProfileFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='api.erc721collection')),
                ('followed_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='api.profile')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
            options={
                'unique_together': {('profile', 'followed_collection', 'followed_profile')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('event_type_short', models.CharField(blank=True, choices=[('MI', 'Mint'), ('SA', 'Sale'), ('TR', 'Transfer'), ('OF', 'Offer'), ('CO', 'Cancel Offer'), ('LI', 'List'), ('CL', 'Cancel Listing'), ('AD', 'Airdrop'), ('BU', 'Burn'), ('BR', 'Bridge')], max_length=2, null=True)),
                ('offchain_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.offchainactivity')),
                ('onchain_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.erc721activity')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.profile')),
                ('token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.erc721token')),
            ],
            options={
                'unique_together': {('profile', 'onchain_activity')},
            },
        ),
        migrations.CreateModel(
            name='NonNFTContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('network', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.network')),
            ],
            options={
                'unique_together': {('address', 'network')},
            },
        ),
        migrations.CreateModel(
            name='HiddenToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.profile')),
            ],
            options={
                'unique_together': {('user', 'token')},
            },
        ),
        migrations.CreateModel(
            name='FeaturedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.erc721token')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.profile')),
            ],
            options={
                'unique_together': {('user', 'token')},
            },
        ),
        migrations.AddIndex(
            model_name='erc721token',
            index=models.Index(fields=['id', 'approved', 'collection', 'owner'], name='api_erc721t_id_685781_idx'),
        ),
        migrations.AddIndex(
            model_name='erc721token',
            index=models.Index(fields=['approved'], name='api_erc721t_approve_971137_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='erc721token',
            unique_together={('smart_contract', 'token_id')},
        ),
        migrations.AlterUniqueTogether(
            name='erc721collection',
            unique_together={('address', 'network')},
        ),
        migrations.AlterUniqueTogether(
            name='erc721activity',
            unique_together={('txn_id', 'quantity', 'token', 'from_profile', 'to_profile', 'timestamp')},
        ),
        migrations.AlterUniqueTogether(
            name='erc1155tokenowner',
            unique_together={('token', 'owner')},
        ),
        migrations.AlterIndexTogether(
            name='erc1155tokenowner',
            index_together={('token', 'owner')},
        ),
        migrations.AlterUniqueTogether(
            name='contract',
            unique_together={('address', 'network')},
        ),
        migrations.AlterUniqueTogether(
            name='collectionofferthreshold',
            unique_together={('profile', 'collection')},
        ),
        migrations.AlterUniqueTogether(
            name='bridgedcontract',
            unique_together={('from_contract', 'to_contract')},
        ),
    ]
